site=SaM Java Cl\u2601ud
welcome=Добро пожаловать в SaM Java Cl\u2601ud!
copyright=2016-2017 SaM Solutions.
privacy=Конфиденциальность
terms=Условия использования
backtotop=Наверх
email=E-mail
password=Пароль
signin=Войти
en=En
ru=Ру
page_not_found=Страница не найдена.
error_has_occured=Произошла ошибка.
stacktrace=Подробнее
welcome_descr=Рады предложить вам иструмент быстрой разработки приложений на Java нового поколения!
what_is_cloud=Что такое SaM Java Cl\u2601ud?!
what_is_cloud_descr=SaM Java Cl\u2601ud это виртуальный образ содержащий программное обеспечение для быстрой разработки Java-приложений
what_is_eng=Что такое Инженерные Практики?!
what_is_eng_descr=Это набор способов разработки для достижения качества продукта в кратчайшее время, включает управление процессом разработки, сборкой, окружением, качеством кода и многое другое...
enter=Пожалуйста войдите
enter2=Войти
logout=Выйти
rememberme=Запомнить
#
app=Приложение
apps=Приложения
apps_index_descr=Управляйте созданием новых Java-приложений через веб-интерфейс. Вы можете также просматривать созданные приложения и информацию о них. Изменяйте настройки приложений или управляйте удалением их при помощи этого раздела сайта!
appName=Имя приложения
# VCS
vcs=Управление версиями
vcs_index_descr=Системы контроля/управления версиями исходного кода предназначены для хранения несколько версий одних и тех же исходников и позволяют вернуться к более ранним версиям, определять авторство изменений, и многое другое.
vcss=Системы контроля версий 
# Build automation
build.automation=Автоматизация кода
build.automation.description=Автоматизация кода включает в себя настройку сборок проекта при помощи популярных сборочных систем ( Maven, Gradle итд). Задавайте сборочную систему дла Вашего проекта здесь. Доступна генерация проекта с тестовыми исходниками!
projects=Проекты
# Continuous integration
ci=Непрерывная интеграция
ci.description=Непрерывная интеграция является одной из важнейших инженерных практик, применяемой для раннего разрешения интеграционных проблем в Вашем проекте. В {0} есть возможность автоматической привязки проектов к CI системам.
cis=Системы непрерывной интеграции
#
db=Управление данными
dbs=Базы данных
dbs.description=Хранение и управление пользовательских данных является важнейшей функцией любого приложения. Вы можете выбрать вид организации хранения: SQL или NoSQL, а также получить готовый сгенерированный код при помощи средств cloud-a.
# Code review
code.review=Ревью кода
code.review.description=Ревью (инспекция) кода - это одна из важнейших инженерных практик, которая применяется для нахождения ошибок или вариантов неправильного использования кода, допущенных в процессе его первоначального написания. 
# Testing
testing=Тестирование
testing.description=TDD, ATDD, BDD, Unittests, Autotests итд. Существует разнообразное количество видов тестов, которые сопровождают Ваш основной код и поддерживают его в хорошем качественном состоянии. Сгенерируйте тесты для вашего проекта здесь!
# Refactoring
refactoring=Рефакторинг
refactoring.description=Рефакторинг - это процесс изменения внутреннего устройства приложения или модуля, который не меняет его функциональное и внешнее поведение, привнося при это в него больше гибкости, ясности, и улучшая нефункциональное поведение.
# Code Quality
code.quality=Качество кода
code.quality.description=Качество исходного кода проекта - одно из критериев качества всего разрабатываемого ПО в целом. Существуют числовые метрики, которые оценивают качество кода по различным параметрам. И это может быть автоматизировано (напр. SonarQube).
# Deployment
deployment=Развертывание
deployment.description=Развертывание конечного продукта является одной и важнейших вех завершения проекта, и обычно сопровождается большими затруднениями и интеграционными рисками. Поэтому эти процедуры должны быть максимально автоматизированы.
# Continuous Delivery
cd=Непрерывная поставка
cd.description=Подход, применяемый в непрерывной поставке, заключается в частых развертываниях (по несколько раз за сеанс работы пользователя) для обновления функционала и других фич проекта "на лету" и с отсутствием критических ошибок.
#
users.management=Пользователи
users.management.description=Этот раздел содержит варианты управления проектной командой и вовлеченными в проект людьми с точки зрения прав доступа и операций; аутентификации и авторизации для управления проектом, который помещен в SaM Java Cl\u2601ud. 
#
view.details=Подробнее
#
find=Поиск
create=Создать
#
mavenappprovider=Maven Application Provider
antappprovider=Ant Application Provider
gradleappprovider=Gradle Application Provider

#
springhelloworldprofile=Простое Spring Core Hello World приложение
#
healthchecks=Провайдеры (health checks)
provider=Провайдер
description=Описание
alive=Доступен