site=SaM Java Cl\u2601ud
welcome=Welcome to SaM Java Cl\u2601ud!
copyright=2016-2017 SaM Solutions.
privacy=Privacy
terms=Terms
backtotop=Back to top
email=E-mail
password=Password
signin=Sign in
en=En
ru=Ru
page_not_found=Page not found.
error_has_occured=Error has occured.
stacktrace=Stacktrace
welcome_descr=We are glad to present a new generation of application lifecycle development!
what_is_cloud=What is SaM Java Cl\u2601ud?!
what_is_cloud_descr=SaM Java Cl\u2601ud is virtual image of accumulated software tools unified with unique RAD process
what_is_eng=What are Engineering Practices?!
what_is_eng_descr=Good Engineering Practices are applied to achieve quality product in fast time
enter=Please sign in
enter2=Sign in
logout=Logout
rememberme=Remember me
#
app=Application
apps=Applications
apps_index_descr=Manage your new Java applications via Web interface. You are able to manage list of created apps, delete them or edit settings. Changing of data and settings is convenient and easy! Setup a new modern Java application now!
appName=Application Name
# VCS
vcs=Version Control Systems
vcs_index_descr=Version control systems manage changes of sources. Changes are tracked by a incremental number or revision identifier. Each revision is associated with a timestamp and the person who made the change. Sources can be compared, restored, merged.
vcss=Version Control Systems
# Build automation
build.automation=Build/Sources automation
build.automation.description=Build automation is the process of automating the creation of a software project builds.Manage your build system for the project via popular Java build tools (Maven, Gradle, etc). Generate a project with code samples.
projects=Projects 
# Continuous integration
ci=Continuous integration
ci.description=Continuous integration is one of the most important engineering practices used for the early resolution of the integration problems within your project. The {0} provides the possibility to wire automatically projects to the CI systems.
cis=Continuous integration systems
# Data Management
db=Data Management
dbs=Databases
dbs.description=Databases are the common part of every application. Organize data in relational or document oriented form using SQL or NoSQL connectors to modern databases within the cloud. Sources generation for selected database is also available.
# Code review
code.review=Code Review
code.review.description=Code Review is one of the important engineering practices used to distinguish mistakes or bad practices which appeared during initial source code creation. Automate this process in your project via static and dynamic code analysis tools.
# Testing
testing=Testing
testing.description=TDD, ATDD, BDD, Unittests, Autotests etc... There are a lot of kinds of tests which may be written alongside with the main code to provide good coverage of automated checks of code stability and regression. Cloud will help you to generate them easily.
# Refactoring
refactoring=Refactoring
refactoring.description=Refactoring is a process of changing internal structure of an application/module/unit/class or any other logical code structure to enhance clarity, convenience, and future extensibility; to fulfill non-functional requirements or to reduce useless pieces within the code.
# Code Quality
code.quality=Code Quality
code.quality.description=Code Quality is one the measurements of the overall Software Quality and has multiple numeric metrics to evaluate a project code in different ways and reports. Automated continuous code quality is available using different tools (ex. SonarQube etc.)
cqs=Code Quality
# Deployment
deployment=Deployment
deployment.description=Software deployment is one of final steps of software delivery to end users. This is always one of the hardest parts of a project and therefore definitely MUST be automated with no doubts. It is available using a mixture of different kinds of software tools and procedures.
# Continuous Delivery
cd=Continuous Delivery
cd.description=To shorten a time of final release deployment a continuous delivery approach is applied. The goal of this approach is to deliver a working software continuously at any time without interfering with users' interaction, minimal downtime and with a lack of bugs.
cds=Continuous Delivery
# User Management
users.management=User Management
users.management.description=This particular section is dedicated to the management of persons or organizations involved into projects, that this SaM Java Cl\u2601ud instance hosts. This is the entry point to setup your custom authentication and authorization of the specific project.
#
view.details=View details
#
find=Find
create=Create
#
mavenappprovider=Maven Application Provider
antappprovider=Ant Application Provider
gradleappprovider=Gradle Application Provider

#
springhelloworldprofile=Spring Core Hello World Application
#
healthchecks=Providers (health checks)
provider=Provider
description=Description
alive=Alive